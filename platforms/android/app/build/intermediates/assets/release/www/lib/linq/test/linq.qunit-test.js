var module=QUnit.module,Enumerable=require("../linq.min");require("../extensions/linq.qunit.js")({Enumerable:Enumerable}),module("linq.qunit"),test("primitive.is",function(){Math.pow(10,2).is(100,"100!!!");1e3.is(1e3),"hoge".is("hoge"),10..is(10),(!0).is(!0),(!1).is(!1),Math.pow(10,2).is(100),Enumerable.rangeTo(10,15,2).is(10,12,14),[1,5,10].all("$<12").isTrue()}),test("collection.is",function(){[1,2,3,4,5].is(1,2,3,4,5),[1,2,3,4,5].is([1,2,3,4,5]),[1,2,3,4,5].is([1,2,3,4,5],"Collection OK?"),Enumerable.range(1,10).is(1,2,3,4,5,6,7,8,9,10),Enumerable.range(5,10).is(Enumerable.rangeTo(5,14)),Enumerable.range(5,10).is(Enumerable.rangeTo(5,14),"Enumerable OK?")}),test("function.is",function(){({a:"a",b:100,c:!0}).is(function(x){return"a"==x.a&&100==x.b&&1==x.c}),"foobar".is(function(x){return"FOOBAR"==x.toUpperCase()})}),test("function.expression",function(){Math.abs(-100).is(function(x){return x<200}),Math.abs(-100).isExpr("$ < 200"),Math.abs(-100).isNot(function(x){return 100!==x}),Math.abs(-100).isNotExpr("$ !== 100")}),test("primitive.isNot",function(){Math.pow(10,2).isNot(1e3,"must not be 100!!!");1e3.isNot(1e4),"hoge".isNot("hage","hage is not!"),10..isNot(100);({a:"a",b:100,c:!0}).isNot({a:"a",b:100,c:!0}),(!0).isNot(!1),(!1).isNot(!0)}),test("collection.isNot",function(){[1,2,3,4,5].isNot(1,2,3,4),[1,2,3,4,5].isNot([1,2,3,4]),[1,2,3,4,5].isNot([1,2,3,5],"Collection OK?"),Enumerable.range(1,10).isNot(1,2,3,4,5,6,8,9,10),Enumerable.range(5,10).isNot(Enumerable.rangeTo(5,12)),Enumerable.range(5,10).isNot(Enumerable.rangeTo(5,15),"Enumerable OK?")}),test("function.isNot",function(){({a:"a",b:100,c:!0}).isNot(function(x){return"a"==x.a&&1300==x.b&&1==x.c}),"foobar".isNot(function(x){return"FOoBAR"==x.toUpperCase()})}),test("isTrue",function(){(!0).isTrue(),(void 0===Enumerable.empty().firstOrDefault()).isTrue()}),test("isFalse",function(){(!1).isFalse(),Enumerable.range(1,10).all("$<5").isFalse()}),test("catch",function(){Enumerable.Assert.expectError(function(){throw new Error("ERROOOOOR")}),Enumerable.Assert.expectError(function(){throw new Error("ERROOOOOR")},"error throw"),Enumerable.Assert.doesNotThrow(function(){}),Enumerable.Assert.doesNotThrow(function(){},"does not")});