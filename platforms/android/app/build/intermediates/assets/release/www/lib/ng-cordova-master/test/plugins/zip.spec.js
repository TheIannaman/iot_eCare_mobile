describe("Service: $cordovaZip",function(){var $cordovaZip,$rootScope,$window,$timeout;beforeEach(module("ngCordova.plugins.zip")),beforeEach(inject(function(_$cordovaZip_,_$window_,_$timeout_,_$rootScope_){$cordovaZip=_$cordovaZip_,$rootScope=_$rootScope_,$timeout=_$timeout_,($window=_$window_).zip={unzip:angular.noop}})),it("should call $window's zip.unzip method of success",function(){var result,src="cordova-2.9.1-src.zip",dest="cordova-2.9.1-src";spyOn($window.zip,"unzip").and.callFake(function(src,dest,callback,updateCallback){callback(0)}),$cordovaZip.unzip(src,dest).then(function(){result="success"},angular.noop,angular.noop),$rootScope.$digest(),expect(result).toBe("success"),expect($window.zip.unzip).toHaveBeenCalledWith(src,dest,jasmine.any(Function),jasmine.any(Function))}),it("should call $window's zip.unzip method of error",function(){var result;spyOn($window.zip,"unzip").and.callFake(function(src,dest,callback,updateCallback){callback(-1)}),$cordovaZip.unzip("cordova-2.9.1-src.zip","cordova-2.9.1-src").then(angular.noop,function(){result="error"},angular.noop),$rootScope.$digest(),expect(result).toBe("error")}),it("should call $window's zip.unzip method of notify",function(){var result,notifyResult={loaded:1,total:10};spyOn($window.zip,"unzip").and.callFake(function(src,dest,callback,updateCallback){$timeout(function(){updateCallback(notifyResult)},1e3)}),$cordovaZip.unzip("cordova-2.9.1-src.zip","cordova-2.9.1-src").then(angular.noop,angular.noop,function(response){result=response}),$timeout.flush(),expect(result).toBe(notifyResult)})});