ngCordovaMocks.factory("$cordovaDeviceMotion",["$interval","$q",function($interval,$q){var watchIntervals=[];return{currentAcceleration:null,throwsError:!1,positions:[],watchIntervals:watchIntervals,getCurrentAcceleration:function(){var defer=$q.defer();return this.throwsError?defer.reject("There was an error getting the current acceleration."):defer.resolve(this.currentAcceleration),defer.promise},watchAcceleration:function(options){var defer=$q.defer(),watchId=Math.floor(1e6*Math.random()+1);if(this.positions=[],(self=this).throwsError)defer.reject("There was an error watching the current acceleration.");else{var delay=1e4;options&&options.frequency&&(delay=options.frequency),this.watchIntervals.push($interval(function(){self.throwsError&&defer.reject("There was an error watching the acceleration.");var result={x:Math.floor(100*Math.random()+1),y:Math.floor(100*Math.random()+1),z:Math.floor(100*Math.random()+1),timestamp:Date.now()};self.positions.push(result),defer.notify(result)},delay))}return{watchId:watchId,promise:defer.promise}},clearWatch:function(watchId){var defer=$q.defer();if(watchId)if(this.throwsError)defer.reject("Unable to clear watch.");else{for(var removed=-1,i=0;i<this.watchIntervals.length;i++)if(this.watchIntervals[i].watchId===watchId){$interval.cancel(watchIntervals[i].interval),removed=i;break}-1!==removed&&this.watchIntervals.splice(removed,1)}else defer.reject("Unable to clear watch. No watch ID provided.");return defer.promise}}}]);