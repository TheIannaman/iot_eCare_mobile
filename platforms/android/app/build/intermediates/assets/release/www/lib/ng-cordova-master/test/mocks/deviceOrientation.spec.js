describe("ngCordovaMocks",function(){beforeEach(function(){module("ngCordovaMocks")}),describe("cordovaDeviceOrientation",function(){var count=0,$interval=null,$rootScope=null,$cordovaDeviceOrientation=null,orientationServiceOptions={frequency:1e3};beforeEach(inject(function(_$interval_,_$rootScope_,_$cordovaDeviceOrientation_){$cordovaDeviceOrientation=_$cordovaDeviceOrientation_,$rootScope=_$rootScope_,$interval=_$interval_,count=0})),it("should get the current heading",function(done){var expected={x:1,y:1,z:1,timestamp:Date()};$cordovaDeviceOrientation.currentHeading=expected,$cordovaDeviceOrientation.getCurrentHeading().then(function(actual){expect(actual).toBe(expected)},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should throw an error while getting the current heading.",function(done){$cordovaDeviceOrientation.throwsError=!0,$cordovaDeviceOrientation.getCurrentHeading().then(function(actual){expect(!1).toBe(!0)},function(){expect(!0).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should track five readings over an interval",function(){$cordovaDeviceOrientation.watchHeading(orientationServiceOptions).then(function(){},function(err){expect(!1).toBe(!0)},function(result){count+=1}),$interval.flush(5e3),$rootScope.$digest(),expect(count).toBe(5)}),it("should clear a created watch",function(){var watch=$cordovaDeviceOrientation.watchHeading(orientationServiceOptions);watch.then(function(){},function(err){expect(!1).toBe(!0)},function(result){count+=1}),$interval.flush(5e3),$cordovaDeviceOrientation.clearWatch(watch.watchID),$rootScope.$digest(),expect(count).toBe(5)}),it("should cancel a created watch",function(){var watch=$cordovaDeviceOrientation.watchHeading(orientationServiceOptions);watch.then(function(){},function(err){expect(!1).toBe(!0)},function(result){count+=1}),$interval.flush(5e3),watch.cancel(),$rootScope.$digest(),expect(count).toBe(5)})})});