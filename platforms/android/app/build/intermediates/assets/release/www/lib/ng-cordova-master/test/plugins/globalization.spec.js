describe("Service: $cordovaGlobalization",function(){var $cordovaGlobalization,$rootScope,functionNames=["getPreferredLanguage","getLocaleName","getFirstDayOfWeek"];beforeEach(module("ngCordova.plugins.globalization")),beforeEach(inject(function(_$cordovaGlobalization_,_$q_,_$rootScope_){$cordovaGlobalization=_$cordovaGlobalization_,$rootScope=_$rootScope_,navigator.globalization={dateToString:angular.noop,stringToDate:angular.noop,getDatePattern:angular.noop,getDateNames:angular.noop,isDayLightSavingsTime:angular.noop,numberToString:angular.noop,stringToNumber:angular.noop,getNumberPattern:angular.noop,getCurrencyPattern:angular.noop};for(var i=0;i<functionNames.length;i++)navigator.globalization[functionNames[i]]=angular.noop}));for(var i=0;i<functionNames.length;i++)!function(fnName){it("should call navigator's globalization."+fnName+" method",function(){var result;spyOn(navigator.globalization,fnName).and.callFake(function(successCb,errorCb){successCb("some result")}),$cordovaGlobalization[fnName]().then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result")}),it("should call errorCb in navigator's globalization."+fnName+" when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,fnName).and.callFake(function(successCb,errorCb){errorCb(errorObj)}),$cordovaGlobalization[fnName]().then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)})}(functionNames[i]);it("should call navigator's globalization.dateToString method",function(){var result,date=new Date,options={someOptions:1};spyOn(navigator.globalization,"dateToString").and.callFake(function(date,successCb,errorCb,options){successCb("some result")}),$cordovaGlobalization.dateToString(date,options).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.dateToString.calls.argsFor(0)[0]).toBe(date),expect(navigator.globalization.dateToString.calls.argsFor(0)[3]).toBe(options)}),it("should call errorCb in navigator's globalization.dateToString when error occurs",function(){var result,date=new Date,errorObj={testError:!0};spyOn(navigator.globalization,"dateToString").and.callFake(function(date,successCb,errorCb,options){errorCb(errorObj)}),$cordovaGlobalization.dateToString(date,{someOptions:1}).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.stringToDate method",function(){var result,options={someOptions:1};spyOn(navigator.globalization,"stringToDate").and.callFake(function(date,successCb,errorCb,options){successCb("some result")}),$cordovaGlobalization.stringToDate("2013-02-02",options).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.stringToDate.calls.argsFor(0)[0]).toBe("2013-02-02"),expect(navigator.globalization.stringToDate.calls.argsFor(0)[3]).toBe(options)}),it("should call errorCb in navigator's globalization.stringToDate when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,"stringToDate").and.callFake(function(date,successCb,errorCb,options){errorCb(errorObj)}),$cordovaGlobalization.stringToDate("2013-02-02",{someOptions:1}).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.getDatePattern method",function(){var result,options={someOptions:1};spyOn(navigator.globalization,"getDatePattern").and.callFake(function(successCb,errorCb,options){successCb("some result")}),$cordovaGlobalization.getDatePattern(options).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.getDatePattern.calls.argsFor(0)[2]).toBe(options)}),it("should call errorCb in navigator's globalization.getDatePattern when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,"getDatePattern").and.callFake(function(successCb,errorCb,options){errorCb(errorObj)}),$cordovaGlobalization.getDatePattern({someOptions:1}).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.getDateNames method",function(){var result,options={someOptions:1};spyOn(navigator.globalization,"getDateNames").and.callFake(function(successCb,errorCb,options){successCb("some result")}),$cordovaGlobalization.getDateNames(options).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.getDateNames.calls.argsFor(0)[2]).toBe(options)}),it("should call errorCb in navigator's globalization.getDateNames when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,"getDateNames").and.callFake(function(successCb,errorCb,options){errorCb(errorObj)}),$cordovaGlobalization.getDateNames({someOptions:1}).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.isDayLightSavingsTime method",function(){var result,date=new Date;spyOn(navigator.globalization,"isDayLightSavingsTime").and.callFake(function(date,successCb,errorCb){successCb("some result")}),$cordovaGlobalization.isDayLightSavingsTime(date).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.isDayLightSavingsTime.calls.argsFor(0)[0]).toBe(date)}),it("should call errorCb in navigator's globalization.isDayLightSavingsTime when error occurs",function(){var result,date=new Date,errorObj={testError:!0};spyOn(navigator.globalization,"isDayLightSavingsTime").and.callFake(function(date,successCb,errorCb){errorCb(errorObj)}),$cordovaGlobalization.isDayLightSavingsTime(date).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.getNumberPattern method",function(){var result,options={someOptions:1};spyOn(navigator.globalization,"getNumberPattern").and.callFake(function(successCb,errorCb,options){successCb("some result")}),$cordovaGlobalization.getNumberPattern(options).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.getNumberPattern.calls.argsFor(0)[2]).toBe(options)}),it("should call errorCb in navigator's globalization.getNumberPattern when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,"getNumberPattern").and.callFake(function(successCb,errorCb,options){errorCb(errorObj)}),$cordovaGlobalization.getNumberPattern({someOptions:1}).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.numberToString method",function(){var result,options={someOptions:1};spyOn(navigator.globalization,"numberToString").and.callFake(function(number,successCb,errorCb,options){successCb("some result")}),$cordovaGlobalization.numberToString(2836817,options).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.numberToString.calls.argsFor(0)[0]).toBe(2836817),expect(navigator.globalization.numberToString.calls.argsFor(0)[3]).toBe(options)}),it("should call errorCb in navigator's globalization.numberToString when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,"numberToString").and.callFake(function(number,successCb,errorCb,options){errorCb(errorObj)}),$cordovaGlobalization.numberToString(2836817,{someOptions:1}).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.stringToNumber method",function(){var result,options={someOptions:1};spyOn(navigator.globalization,"stringToNumber").and.callFake(function(number,successCb,errorCb,options){successCb("some result")}),$cordovaGlobalization.stringToNumber("2222836817",options).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.stringToNumber.calls.argsFor(0)[0]).toBe("2222836817"),expect(navigator.globalization.stringToNumber.calls.argsFor(0)[3]).toBe(options)}),it("should call errorCb in navigator's globalization.stringToNumber when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,"stringToNumber").and.callFake(function(number,successCb,errorCb,options){errorCb(errorObj)}),$cordovaGlobalization.stringToNumber("2222836817",{someOptions:1}).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)}),it("should call navigator's globalization.getCurrencyPattern method",function(){var result;spyOn(navigator.globalization,"getCurrencyPattern").and.callFake(function(currencyCode,successCb,errorCb){successCb("some result")}),$cordovaGlobalization.getCurrencyPattern(6).then(function(response){result=response}),$rootScope.$digest(),expect(result).toBe("some result"),expect(navigator.globalization.getCurrencyPattern.calls.argsFor(0)[0]).toBe(6)}),it("should call errorCb in navigator's globalization.getCurrencyPattern when error occurs",function(){var result,errorObj={testError:!0};spyOn(navigator.globalization,"getCurrencyPattern").and.callFake(function(currencyCode,successCb,errorCb){errorCb(errorObj)}),$cordovaGlobalization.getCurrencyPattern(6).then(angular.noop,function(response){result=response}),$rootScope.$digest(),expect(result).toBe(errorObj)})});