module.exports=function(root){if(null==root.Enumerable)throw new Error("can't find Enumerable. linq.qunit.js must load after linq.js");if(null==Object.defineProperties)throw new Error("linq.qunit.js supports only defined 'Object.defineProperty' browser");var Enumerable=root.Enumerable;Enumerable.Assert={},Enumerable.Utils.extendTo(Array);var defineToObject=function(methodName,value){Object.defineProperty(Object.prototype,methodName,{enumerable:!1,configurable:!0,writable:!0,value:value})},isCollection=function(obj){return obj instanceof Enumerable||obj instanceof Array},executeCode=function(action){try{return action(),null}catch(e){return e}};defineToObject("is",function(expected,message){isCollection(this)?arguments.length<=2&&isCollection(expected)?deepEqual(Enumerable.from(this).toArray(),Enumerable.from(expected).toArray(),message):deepEqual(Enumerable.from(this).toArray(),Enumerable.from(arguments).toArray()):expected instanceof Function?ok(expected(this.valueOf()),message):strictEqual(this.valueOf(),expected,message)}),defineToObject("isNot",function(expected,message){isCollection(this)?arguments.length<=2&&isCollection(expected)?notDeepEqual(Enumerable.from(this).toArray(),Enumerable.from(expected).toArray(),message):notDeepEqual(Enumerable.from(this).toArray(),Enumerable.from(arguments).toArray()):expected instanceof Function?ok(!expected(this.valueOf()),message):notStrictEqual(this.valueOf(),expected,message)}),defineToObject("isExpr",function(expression,message){ok(Enumerable.Utils.createLambda(expression)(this.valueOf()),message)}),defineToObject("isNotExpr",function(expression,message){ok(!Enumerable.Utils.createLambda(expression)(this.valueOf()),message)}),defineToObject("isTrue",function(message){this.is(!0,message)}),defineToObject("isFalse",function(message){this.is(!1,message)}),Enumerable.Assert.expectError=function(testAction,message){var error=executeCode(testAction);return null!=error?ok(!0,message):ok(!1,"Failed testCode does not throw error."+(null!=message?" Message:"+message:"")),error},defineToObject("doesNotThrow",function(testAction,message){var error=executeCode(testAction);null!=error&&ok(!1,"Failed testCode throws error. CatchedErrorMessage:"+error.message+(null!=message?" Message:"+message:""))})};