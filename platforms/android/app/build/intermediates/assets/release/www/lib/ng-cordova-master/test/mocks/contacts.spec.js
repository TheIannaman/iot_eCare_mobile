describe("ngCordovaMocks",function(){beforeEach(function(){module("ngCordovaMocks")}),describe("cordovaContacts",function(){var $rootScope=null,$cordovaContacts=null,findOptions={fields:"*"},createContact=function(id,firstName,lastName,nickname,phoneNumbers,emailAddresses,mailingAddresses,ims,organizations,birthday,note,photos,categories,urls){return{id:id,displayName:firstName+" "+lastName,name:{givenName:firstName,familyName:lastName},nickname:firstName,phoneNumbers:phoneNumbers,emails:emailAddresses,addresses:mailingAddresses,ims:ims,organizations:organizations,birthday:birthday,note:note,photos:photos,categories:categories,urls:urls}};beforeEach(inject(function(_$rootScope_,_$cordovaContacts_){$cordovaContacts=_$cordovaContacts_,$rootScope=_$rootScope_;var earl=createContact("1","Earl","Baleep",0,[],[],[],[],[],"06/21/1952","",[],[],[]);$cordovaContacts.contacts.push(earl)})),it("should save a contact",function(done){var originalLength=$cordovaContacts.contacts.length,contact=createContact("1000000","Norman","Yup");$cordovaContacts.save(contact).then(function(){var newLength=$cordovaContacts.contacts.length;expect(newLength).toBe(originalLength+1)},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should not allow the same contact to be saved twice",function(done){var originalLength=$cordovaContacts.contacts.length,contact=createContact("1000001","John","Doe");$cordovaContacts.save(contact).then(function(){var newLength=$cordovaContacts.contacts.length;expect(newLength).toBe(originalLength+1),$cordovaContacts.save(contact).then(function(){expect(!1).toBe(!0)},function(){expect(!0).toBe(!0)}).finally(function(){done()})},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should remove an existng contact",function(done){var originalLength=$cordovaContacts.contacts.length,contact=createContact("1000002","John","Doe");$cordovaContacts.save(contact).then(function(){var newLength=$cordovaContacts.contacts.length;expect(newLength).toBe(originalLength+1),$cordovaContacts.remove(contact).then(function(){newLength=$cordovaContacts.contacts.length,expect(newLength).toBe(originalLength)},function(){expect(!1).toBe(!0)}).finally(function(){done()})},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should fail to remove a contact if it does not exist",function(done){var contact=createContact("10000003","John","Doe");$cordovaContacts.remove(contact).then(function(){expect(!1).toBe(!0)},function(){expect(!0).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should find an existing contact",function(done){$cordovaContacts.find(findOptions).then(function(){expect(!0).toBe(!0)},function(error){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should not find a specific contact",function(done){$cordovaContacts.find(findOptions).then(function(){expect(!0).toBe(!0)},function(error){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should throw an error while finding a contact.",function(done){$cordovaContacts.throwsError=!0,$cordovaContacts.find(findOptions).then(function(){expect(!1).toBe(!0)},function(error){expect(!0).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()})})});