ngCordovaMocks.factory("$cordovaGeolocation",["$interval","$q",function($interval,$q){var watchIntervals=[];return{throwsError:!1,watchIntervals:watchIntervals,locations:[],currentPosition:null,nextPosition:null,useHostAbilities:!0,getCurrentPosition:function(options){var defer=$q.defer();return this.throwsError?defer.reject("There was an error getting the location."):(options&&(options=options),this.useHostAbilities?navigator.geolocation?navigator.geolocation.getCurrentPosition(function(position){this.currentPosition=position,defer.resolve(this.currentPosition)},function(error){defer.reject(error)}):defer.reject("Geolocation is not supported by this browser."):defer.resolve(this.currentPosition)),defer.promise},watchPosition:function(options){var defer=$q.defer(),watchID=Math.floor(1e6*Math.random()+1),self=this;if(self.locations=[],self.throwsError)defer.reject("There was an error getting the geolocation.");else{var delay=1e3;options&&options.timeout&&(delay=options.timeout),self.watchIntervals.push({watchID:watchID,interval:$interval(function(){self.throwsError&&defer.reject("There was an error watching the geolocation.");var result=self.nextPosition;null===result&&(self.useHostAbilities?navigator.geolocation?navigator.geolocation.getCurrentPosition(function(position){self.currentPosition=position,self.locations.push(position),defer.resolve(position)},function(error){defer.reject(error)}):defer.reject("Geolocation is not supported by this browser."):(result={coords:{latitude:180*Math.random()+1-90,longitude:360*Math.random()+1-180,altitude:100*Math.random()+1,accuracy:10*Math.random()+1,altitudeAccuracy:10*Math.random()+1,heading:360*Math.random()+1,speed:100*Math.random()+1},timestamp:Date.now()},self.currentPosition=result,self.locations.push(result),defer.notify(result)))},delay)})}var cancel=function(id){for(var removed=-1,i=0;i<self.watchIntervals.length;i++)if(self.watchIntervals[i].watchID===id){$interval.cancel(watchIntervals[i].interval),removed=i;break}-1!==removed&&self.watchIntervals.splice(removed,1)};return defer.promise.cancel=function(){cancel(watchID)},defer.promise.clearWatch=function(id){cancel(id||watchID)},defer.promise.watchID=watchID,defer.promise},clearWatch:function(watchID){var defer=$q.defer();if(watchID)if(this.throwsError)defer.reject("Unable to clear watch.");else{for(var removed=-1,i=0;i<this.watchIntervals.length;i++)if(this.watchIntervals[i].watchID===watchID){$interval.cancel(watchIntervals[i].interval),removed=i;break}-1!==removed&&this.watchIntervals.splice(removed,1)}else defer.reject("Unable to clear watch. No watch ID provided.");return defer.promise}}}]);