angular.module("ngCordova.plugins.preferences",[]).factory("$cordovaPreferences",["$window","$q",function($window,$q){return{pluginNotEnabledMessage:"Plugin not enabled",decoratePromise:function(promise){promise.success=function(fn){return promise.then(fn),promise},promise.error=function(fn){return promise.then(null,fn),promise}},store:function(key,value,dict){var deferred=$q.defer(),promise=deferred.promise;$window.plugins?(3===arguments.length?$window.plugins.appPreferences.store(dict,key,value):$window.plugins.appPreferences.store(key,value)).then(function(value){deferred.resolve(value)},function(error){deferred.reject(new Error(error))}):deferred.reject(new Error(this.pluginNotEnabledMessage));return this.decoratePromise(promise),promise},fetch:function(key,dict){var deferred=$q.defer(),promise=deferred.promise;$window.plugins?(2===arguments.length?$window.plugins.appPreferences.fetch(dict,key):$window.plugins.appPreferences.fetch(key)).then(function(value){deferred.resolve(value)},function(error){deferred.reject(new Error(error))}):deferred.reject(new Error(this.pluginNotEnabledMessage));return this.decoratePromise(promise),promise},remove:function(key,dict){var deferred=$q.defer(),promise=deferred.promise;$window.plugins?(2===arguments.length?$window.plugins.appPreferences.remove(dict,key):$window.plugins.appPreferences.remove(key)).then(function(value){deferred.resolve(value)},function(error){deferred.reject(new Error(error))}):deferred.reject(new Error(this.pluginNotEnabledMessage));return this.decoratePromise(promise),promise},show:function(){var deferred=$q.defer(),promise=deferred.promise;return $window.plugins?$window.plugins.appPreferences.show().then(function(value){deferred.resolve(value)},function(error){deferred.reject(new Error(error))}):deferred.reject(new Error(this.pluginNotEnabledMessage)),this.decoratePromise(promise),promise}}}]);