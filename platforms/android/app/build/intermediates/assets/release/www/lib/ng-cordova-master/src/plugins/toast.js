angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q","$window",function($q,$window){return{showShortTop:function(message){var q=$q.defer();return $window.plugins.toast.showShortTop(message,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},showShortCenter:function(message){var q=$q.defer();return $window.plugins.toast.showShortCenter(message,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},showShortBottom:function(message){var q=$q.defer();return $window.plugins.toast.showShortBottom(message,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},showLongTop:function(message){var q=$q.defer();return $window.plugins.toast.showLongTop(message,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},showLongCenter:function(message){var q=$q.defer();return $window.plugins.toast.showLongCenter(message,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},showLongBottom:function(message){var q=$q.defer();return $window.plugins.toast.showLongBottom(message,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},showWithOptions:function(options){var q=$q.defer();return $window.plugins.toast.showWithOptions(options,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},show:function(message,duration,position){var q=$q.defer();return $window.plugins.toast.show(message,duration,position,function(response){q.resolve(response)},function(error){q.reject(error)}),q.promise},hide:function(){var q=$q.defer();try{$window.plugins.toast.hide(),q.resolve()}catch(error){q.reject(error&&error.message)}return q.promise}}}]);