describe("ngCordovaMocks",function(){beforeEach(function(){module("ngCordovaMocks")}),describe("cordovaDeviceMotion",function(){var count=0,$interval=null,$rootScope=null,$cordovaDeviceMotion=null,motionServiceOptions={frequency:1e3};beforeEach(inject(function(_$interval_,_$rootScope_,_$cordovaDeviceMotion_){$cordovaDeviceMotion=_$cordovaDeviceMotion_,$rootScope=_$rootScope_,$interval=_$interval_,count=0})),it("should get the current acceleration",function(done){var expected={x:1,y:1,z:1,timestamp:Date()};$cordovaDeviceMotion.currentAcceleration=expected,$cordovaDeviceMotion.getCurrentAcceleration().then(function(actual){expect(actual).toBe(expected)},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should throw an error while getting the current acceleration.",function(done){$cordovaDeviceMotion.throwsError=!0,$cordovaDeviceMotion.getCurrentAcceleration().then(function(actual){expect(!1).toBe(!0)},function(){expect(!0).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should track five points over an interval",function(){$cordovaDeviceMotion.watchAcceleration(motionServiceOptions).promise.then(function(){},function(err){expect(!1).toBe(!0)},function(result){count+=1}),$interval.flush(5e3),$rootScope.$digest(),expect(count).toBe(5)}),it("should clear a created watch",function(){var watch=$cordovaDeviceMotion.watchAcceleration(motionServiceOptions);watch.promise.then(function(){},function(err){expect(!1).toBe(!0)},function(result){count+=1}),$interval.flush(6e3),$cordovaDeviceMotion.clearWatch(watch.watchId),$rootScope.$digest(),expect(count).toBe(6)})})});