describe("ngCordovaMocks",function(){beforeEach(function(){module("ngCordovaMocks")}),describe("cordovaCamera",function(){var $rootScope=null,$cordovaCamera=null,cameraOptions={};beforeEach(inject(function(_$cordovaCamera_,_$rootScope_){$cordovaCamera=_$cordovaCamera_,$rootScope=_$rootScope_})),it("should get picture",function(done){$cordovaCamera.getPicture(cameraOptions).then(function(){expect(!0).toBe(!0)},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should throw an error while getting the picture.",function(done){$cordovaCamera.throwsError=!0,$cordovaCamera.imageData="",$cordovaCamera.getPicture(cameraOptions).then(function(){expect(!0).toBe(!1)},function(){expect(!0).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should return the url of the picture.",function(done){var expected="file:///mnt/sdcard/dummy/myImage.jpeg";$cordovaCamera.throwsError=!1,$cordovaCamera.imageData=expected,$cordovaCamera.getPicture(cameraOptions).then(function(imageData){expect(imageData).toEqual(expected)},function(){expected(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should return an empty string as imageData.",function(done){$cordovaCamera.throwsError=!1,$cordovaCamera.getPicture(cameraOptions).then(function(imageData){expect(imageData).toMatch("")},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()})})});