"use strict";describe("ngCordovaMocks",function(){beforeEach(function(){module("ngCordovaMocks")}),describe("cordovaPush",function(){var $rootScope=null,$timeout=null,$cordovaPush=null;beforeEach(inject(function(_$cordovaPush_,_$rootScope_,_$timeout_){$cordovaPush=_$cordovaPush_,$timeout=_$timeout_,$rootScope=_$rootScope_})),it("should register",function(done){$cordovaPush.deviceToken="ABC",$rootScope.$on("$cordovaPush:notificationReceived",function(event,notification){expect(notification.event).toBe("registered"),expect(notification.regid).toBe("ABC")}),$cordovaPush.register({}).then(function(result){expect(result).toBe("ABC")},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest(),$timeout.flush()}),it("should throw an error while register.",function(done){$cordovaPush.throwsError=!0,$cordovaPush.register().then(function(){expect(!0).toBe(!1)},function(){expect(!0).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should unregister",function(done){$cordovaPush.unregister().then(function(){expect(!0).toBe(!0)},function(){expect(!1).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()}),it("should throw an error while unregister.",function(done){$cordovaPush.throwsError=!0,$cordovaPush.unregister().then(function(){expect(!0).toBe(!1)},function(){expect(!0).toBe(!0)}).finally(function(){done()}),$rootScope.$digest()})})});