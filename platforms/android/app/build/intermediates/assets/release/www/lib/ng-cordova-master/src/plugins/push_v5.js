angular.module("ngCordova.plugins.push_v5",[]).factory("$cordovaPushV5",["$q","$rootScope","$timeout",function($q,$rootScope,$timeout){var push;return{initialize:function(options){var q=$q.defer();return push=PushNotification.init(options),q.resolve(push),q.promise},onNotification:function(){$timeout(function(){push.on("notification",function(notification){$rootScope.$emit("$cordovaPushV5:notificationReceived",notification)})})},onError:function(){$timeout(function(){push.on("error",function(error){$rootScope.$emit("$cordovaPushV5:errorOccurred",error)})})},register:function(){var q=$q.defer();return void 0===push?q.reject(new Error("init must be called before any other operation")):push.on("registration",function(data){q.resolve(data.registrationId)}),q.promise},unregister:function(){var q=$q.defer();return void 0===push?q.reject(new Error("init must be called before any other operation")):push.unregister(function(success){q.resolve(success)},function(error){q.reject(error)}),q.promise},getBadgeNumber:function(){var q=$q.defer();return void 0===push?q.reject(new Error("init must be called before any other operation")):push.getApplicationIconBadgeNumber(function(success){q.resolve(success)},function(error){q.reject(error)}),q.promise},setBadgeNumber:function(number){var q=$q.defer();return void 0===push?q.reject(new Error("init must be called before any other operation")):push.setApplicationIconBadgeNumber(function(success){q.resolve(success)},function(error){q.reject(error)},number),q.promise},finish:function(){var q=$q.defer();return void 0===push?q.reject(new Error("init must be called before any other operation")):push.finish(function(success){q.resolve(success)},function(error){q.reject(error)}),q.promise}}}]);